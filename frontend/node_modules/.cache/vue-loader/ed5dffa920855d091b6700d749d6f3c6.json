{"remainingRequest":"/home/erick/Curso/poker/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/erick/Curso/poker/frontend/src/components/Player.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/erick/Curso/poker/frontend/src/components/Player.vue","mtime":1644952196115},{"path":"/home/erick/Curso/poker/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1639733205897},{"path":"/home/erick/Curso/poker/frontend/node_modules/babel-loader/lib/index.js","mtime":1639733205899},{"path":"/home/erick/Curso/poker/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1639733205897},{"path":"/home/erick/Curso/poker/frontend/node_modules/vue-loader/lib/index.js","mtime":1639733214794}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBDYXJkIGZyb20gJy4vQ2FyZC52dWUnOwppbXBvcnQgUGxheWVyQXBpIGZyb20gJy4uL2FwaS9wbGF5ZXInOwpleHBvcnQgZGVmYXVsdHsKICAgIG5hbWU6ICJQbGF5ZXIiLAogICAgY29tcG9uZW50czp7CiAgICAgICAgQ2FyZAogICAgfSwKICAgIHByb3BzOnsKICAgICAgICBwbGF5ZXI6ewogICAgICAgICAgICB0eXBlOiBPYmplY3QsCiAgICAgICAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICAgICAgfQogICAgfSwKICAgIGRhdGEoKXsKICAgICAgICByZXR1cm57CiAgICAgICAgICAgIC8vIGNhcmRzOiBbXSwKICAgICAgICAgICAgbWFya2VkQ2FyZHM6IFtdCiAgICAgICAgfQogICAgfSwKICAgIG1ldGhvZHM6ewogICAgICAgIGNhcmRNYXJrZWRFdmVudChjYXJkSWQpewogICAgICAgICAgICBpZih0aGlzLiRkYXRhLm1hcmtlZENhcmRzLmluY2x1ZGVzKGNhcmRJZCkpewogICAgICAgICAgICAgICAgbGV0IGluZGV4ID0gdGhpcy4kZGF0YS5tYXJrZWRDYXJkcy5pbmRleE9mKGNhcmRJZCk7CiAgICAgICAgICAgICAgICB0aGlzLiRkYXRhLm1hcmtlZENhcmRzLnNwbGljZShpbmRleCwgMSk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzZXsKICAgICAgICAgICAgICAgIHRoaXMuJGRhdGEubWFya2VkQ2FyZHMucHVzaChjYXJkSWQpOwogICAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBpc01hcmtlZChjYXJkSWQpewogICAgICAgICAgICByZXR1cm4gdGhpcy4kZGF0YS5tYXJrZWRDYXJkcy5pbmNsdWRlcyhjYXJkSWQpOwogICAgICAgIH0sCiAgICAgICAgYXN5bmMgY2hhbmdlQ2FyZHMoKXsKICAgICAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBQbGF5ZXJBcGkucHV0Q2FtYmlvQ2FydGFzKHRoaXMuJHByb3BzLnBsYXllci5pZCx0aGlzLiRkYXRhLm1hcmtlZENhcmRzKTsKICAgICAgICAgICAgaWYocmVzcG9uc2UuZGF0YS5zdGF0dXMgPT0gIktPIil7CiAgICAgICAgICAgICAgICBhbGVydChyZXNwb25zZS5kYXRhLm1lc3NhZ2UpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2V7CiAgICAgICAgICAgICAgICAvLyB0aGlzLiRkYXRhLmNhcmRzID0gcmVzcG9uc2UuZGF0YS5oYW5kOwogICAgICAgICAgICAgICAgdGhpcy4kZW1pdCgiY2FyZHNDaGFuZ2VkIik7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgIH0KICAgIH0KfQovL1FVRSBOTyBTRSBWRUFOIExBUyBDQVJUQVMgREUgTE9TIEJPVFMgU0kgTk8gSEEgQ0FNQklBRE8K"},{"version":3,"sources":["Player.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA","file":"Player.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <b-card :title=\"player.name\">\n        <b-row>\n            <b-col v-for=\"card in player.hand\" v-bind:key=\"card.id\" >\n                <Card @cardMarked=\"cardMarkedEvent\" :card=\"card\" :isMarked=\"isMarked(card.id)\" :player=\"player\"></Card>  \n            </b-col>  \n        </b-row>\n            <hr>\n        <b-row>\n            <b-col>\n                <b-button v-if=\"player.user && !player.haCambiado\"  @click=\"changeCards\" href=\"#\" variant=\"primary\">CAMBIAR</b-button>\n            </b-col>\n        </b-row>\n    </b-card>\n</template>\n<script>\nimport Card from './Card.vue';\nimport PlayerApi from '../api/player';\nexport default{\n    name: \"Player\",\n    components:{\n        Card\n    },\n    props:{\n        player:{\n            type: Object,\n            required: true\n        }\n    },\n    data(){\n        return{\n            // cards: [],\n            markedCards: []\n        }\n    },\n    methods:{\n        cardMarkedEvent(cardId){\n            if(this.$data.markedCards.includes(cardId)){\n                let index = this.$data.markedCards.indexOf(cardId);\n                this.$data.markedCards.splice(index, 1);\n            }\n            else{\n                this.$data.markedCards.push(cardId);\n            }\n        },\n        isMarked(cardId){\n            return this.$data.markedCards.includes(cardId);\n        },\n        async changeCards(){\n            const response = await PlayerApi.putCambioCartas(this.$props.player.id,this.$data.markedCards);\n            if(response.data.status == \"KO\"){\n                alert(response.data.message);\n            }\n            else{\n                // this.$data.cards = response.data.hand;\n                this.$emit(\"cardsChanged\");\n            }\n            \n            \n        }\n    }\n}\n//QUE NO SE VEAN LAS CARTAS DE LOS BOTS SI NO HA CAMBIADO\n</script>\n"]}]}